// Place your key bindings in this file to override the defaults
[
    // VIM (GOOD ATTEMPT)
    // My custom maps
  
    {
      "key": "Alt+o",
      "command": "projectManager.listGitProjects#sideBarGit"
    },
  
    {
      "key": "ctrl+tab",
      "command": "workbench.action.nextEditor"
    },
  
    {
      "key": "ctrl+shift+tab",
      "command": "workbench.action.previousEditor"
    },
  
    // {
    //   "key": "tab",
    //   "command": "tab",
    //   "when": "editorTextFocus && !editorTabMovesFocus"
    // },
  
    {
      "key": "shift+tab",
      "command": "outdent",
      "when": "editorTextFocus && !editorTabMovesFocus"
    },
  
    {
      "key": "ctrl+shift+=",
      "command": "editor.unfold",
      "when": "editorTextFocus"
    },
  
    {
      "key": "ctrl+shift+-",
      "command": "editor.fold",
      "when": "editorTextFocus "
    },
  
    // File tree
    {
      "key": "ctrl+n",
      "command": "workbench.action.toggleSidebarVisibility"
    },
  
    {
      "key": "ctrl+n",
      "command": "workbench.files.action.focusFilesExplorer",
      "when": "editorTextFocus"
    },
  
    {
      "key": "a",
      "command": "explorer.newFile",
      "when": "filesExplorerFocus && !inputFocus"
    },
  
    {
      "key": "shift+a",
      "command": "explorer.newFolder",
      "when": "filesExplorerFocus && !inputFocus"
    },
  
    {
      "key": "r",
      "command": "renameFile",
      "when": "filesExplorerFocus && !inputFocus"
    },
  
    {
      "key": "y",
      "command": "filesExplorer.copy",
      "when": "filesExplorerFocus && !inputFocus"
    },
  
    {
      "key": "p",
      "command": "filesExplorer.paste",
      "when": "filesExplorerFocus && !inputFocus"
    },
  
    {
      "key": "d",
      "command": "deleteFile",
      "when": "filesExplorerFocus && !inputFocus"
    },
  
    // Navigate in suggestions menu
    {
      "key": "ctrl+n",
      "command": "selectNextSuggestion",
      "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
    },
  
    {
      "key": "ctrl+p",
      "command": "selectPrevSuggestion",
      "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
    },
  
    // Navigate between buffers
    {
      "key": "ctrl+h",
      "command": "workbench.action.navigateLeft"
    },
    {
      "key": "ctrl+l",
      "command": "workbench.action.navigateRight"
    },
    {
      "key": "ctrl+k",
      "command": "workbench.action.navigateUp",
      "when": "!suggestWidgetVisible"
    },
    {
      "key": "ctrl+j",
      "command": "workbench.action.navigateDown",
      "when": "!suggestWidgetVisible"
    },
  
    // Navigate in the quick menus
    {
      "key": "ctrl+n",
      "command": "workbench.action.quickOpenNavigateNext",
      "when": "inQuickOpen"
    },
  
    {
      "key": "ctrl+p",
      "command": "workbench.action.quickOpenNavigatePrevious",
      "when": "inQuickOpen"
    },
  
    // Navigate in the code actions menu
    {
      "key": "ctrl+n",
      "command": "selectNextCodeAction",
      "when": "codeActionMenuVisible"
    },
  
    {
      "key": "ctrl+p",
      "command": "selectPrevCodeAction",
      "when": "codeActionMenuVisible"
    },
  
    // Terminal
    {
      "key": "alt+i",
      "command": "workbench.action.terminal.focus",
      "when": "!terminalFocus"
    },
  
    {
      "key": "alt+i",
      "command": "workbench.action.terminal.toggleTerminal",
      "when": "terminal.active"
    },
  
    {
      "key": "alt+enter",
      "command": "workbench.action.toggleZenMode"
    },
    {
      "key": "right",
      "command": "-cursorRight",
      "when": "textInputFocus"
    },
    {
      "key": "right",
      "command": "cursorRight",
      "when": "textInputFocus"
    },
    {
      "key": "alt+l",
      "command": "-toggleFindInSelection",
      "when": "editorFocus"
    },
    {
      "key": "alt+l",
      "command": "-toggleSearchEditorContextLines",
      "when": "inSearchEditor"
    },
    {
      "key": "alt+l",
      "command": "github.copilot.acceptCursorPanelSolution",
      "when": "github.copilot.activated && github.copilot.panelVisible"
    }
  ]
